server {
		server_name rancher ;

		listen 80;

		listen [::]:80;

		set $proxy_upstream_name "-";

        location / {

			set $namespace      "cattle-system";
			set $ingress_name   "rancher";
			set $service_name   "rancher";
			set $service_port   "80";
			set $location_path  "/";

			rewrite_by_lua_block {
				balancer.rewrite()
			}
			access_by_lua_block {

			}
			header_filter_by_lua_block {

			}
			body_filter_by_lua_block {

			}

			log_by_lua_block {

				balancer.log()
				monitor.call()
			}

			port_in_redirect off;

			set $proxy_upstream_name "cattle-system-rancher-80";

			client_max_body_size                    1m;

			proxy_set_header Host                   $best_http_host;

			# Pass the extracted client certificate to the backend

			# Allow websocket connections
			proxy_set_header                        Upgrade           $http_upgrade;

			proxy_set_header                        Connection        $connection_upgrade;

			proxy_set_header X-Request-ID           $req_id;
			proxy_set_header X-Real-IP              $the_real_ip;

			proxy_set_header X-Forwarded-For        $the_real_ip;

			proxy_set_header X-Forwarded-Host       $best_http_host;
			proxy_set_header X-Forwarded-Port       $pass_port;
			proxy_set_header X-Forwarded-Proto      $pass_access_scheme;

			proxy_set_header X-Original-URI         $request_uri;

			proxy_set_header X-Scheme               $pass_access_scheme;

			# Pass the original X-Forwarded-For
			proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;

			# mitigate HTTPoxy Vulnerability
			# https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
			proxy_set_header Proxy                  "";

			# Custom headers to proxied server

			proxy_connect_timeout                   30s;
			proxy_send_timeout                      1800s;
			proxy_read_timeout                      1800s;

			proxy_buffering                         off;
			proxy_buffer_size                       4k;
			proxy_buffers                           4 4k;
			proxy_request_buffering                 on;

			proxy_http_version                      1.1;

			proxy_cookie_domain                     off;
			proxy_cookie_path                       off;

			# In case of errors try the next upstream server before returning an error
			proxy_next_upstream                     error timeout;
			proxy_next_upstream_tries               3;

			proxy_pass http://upstream_balancer;

			proxy_redirect                          off;

		}

	}
